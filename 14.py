#Самая длинная последовательность Коллатца
'''Следующая повторяющаяся последовательность определена для множества натуральных чисел:

n → n/2 (n - четное)
n → 3n + 1 (n - нечетное)

Используя описанное выше правило и начиная с 13, сгенерируется следующая последовательность:

13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1'''

from time import time
start = time()
def whattime():
	print("Time: ", time() - start)

s1 = 13 #стартовое число
l1 = [] # сюда записываем последовательность
def coll(s): #функция расчета последовательности
	l=[s] #создаем список, первым элементом будет стартовое число
	while s!=1:

		if s%2==0:
			s=s/2

		else:
			s=3*s+1

		l.append(s)

#	print(l)
	return(len(l))

#тестируем разные последовательности
'''
coll(3)
coll(10)
coll(11)
coll(15)
coll(19)
coll(23)
'''
def max_coll(s_max): #функция поиска максимально длинной цепочки 
					#в диапозоне стартовых чисел от 1 до s_max
	
	r_max = 1 		#максимальная длина
	i_max = 1 		#стартовое число для максимальной длины

	for i in range(1,s_max,2):
		r = coll(i)
		if r > r_max:	

			r_max = r
			i_max = i
	print(i_max, r_max)


max_coll(1000001)
whattime()